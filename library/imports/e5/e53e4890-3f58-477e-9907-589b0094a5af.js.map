{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;;;AAGjC,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,YAAQ,EAAE,oBAAY;;;AAElB,YAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;;AAE9C,YAAI,CAAC,YAAY,GAAG,CAAC,CAAC;KAEzB;;;AAGD,oBAAgB,EAAE,0BAAS,KAAK,EAAE,IAAI,EAAE;;AAEpC,YAAG,KAAK,CAAC,IAAI,CAAC,KAAK,KAAK,SAAS,EAAC;;AAC9B,gBAAI,WAAW,GAAG,KAAK,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;;;AAGpD,gBAAI,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,YAAY,EAAE,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;AACvE,gBAAI,CAAC,QAAQ,CAAC,SAAS,IAAI,UAAU,CAAC;;AAEtC,gBAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACtB,gBAAI,IAAI,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;AAChD,gBAAI,CAAC,OAAO,GAAG,GAAG,CAAC;AACnB,gBAAI,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,GAAG,GAAG,UAAU,CAAC;AACtD,gBAAI,CAAC,WAAW,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC;AAC3B,gBAAI,CAAC,SAAS,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;SAE1C;KAGJ;;AAGD,UAAM,EAAE,gBAAU,EAAE,EAAE;;AAEjB,YAAI,CAAC,YAAY,IAAI,EAAE,CAAC;AACxB,YAAG,IAAI,CAAC,YAAY,IAAI,CAAC,EAAC;AACvB,cAAE,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC;SACnD;KAEL;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "var allData = require('allData');//引用所有公共数据\r\n//处理hero跟怪物碰撞，被子弹击中等受伤掉血的所有信息\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    onEnable: function () {//统一用onEnable初始化，重新激活时此函数也会调用\r\n        //所有hero节点下的脚本都引用 heroData 数据\r\n        this.heroData = this.getComponent('heroData');\r\n        \r\n        this.critShowTime = 0;\r\n\r\n    },\r\n\r\n    //被怪物碰到，被攻击到都掉血\r\n    onCollisionEnter: function(other, self) {\r\n        //对碰撞情况进行划分\r\n        if(other.node.group === 'monster'){//被hero子弹击中\r\n            var monsterData = other.getComponent('monsterData');\r\n            \r\n            //hero掉血\r\n            var heroCrited = parseInt(allData.randomNormal() * monsterData.damage);\r\n            this.heroData.currentHp -= heroCrited;\r\n            //hero节点的状态显示栏显现，一个移动的红色暴击伤害出现在头顶，持续2秒\r\n            this.critShowTime = 2;\r\n            var crit = cc.find('heroState/crit', this.node);\r\n            crit.opacity = 255;\r\n            crit.getComponent(cc.Label).string = '-' + heroCrited;\r\n            crit.setPosition(-20, -40);\r\n            crit.runAction(cc.moveTo(2, -40, -20));\r\n           \r\n        }\r\n\r\n\r\n    },\r\n\r\n\r\n    update: function (dt) {\r\n         //暴击标志显现2秒\r\n         this.critShowTime -= dt;\r\n         if(this.critShowTime <= 0){\r\n            cc.find('heroState/crit', this.node).opacity = 0;\r\n         }\r\n\r\n    },\r\n});\r\n"
  ]
}