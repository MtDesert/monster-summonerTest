{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "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",
  "file": "unknown",
  "sourcesContent": [
    "//存放所有游戏通用数据和函数，每个脚本都可以对这里的数据进行读写\r\n\r\nvar allData = {\r\n    //hero已经杀死的monster数目\r\n    killMonsterNum: 0,\r\n    //怪物等级，每杀死10个升一级,初始1级   \r\n    monsterLevel: 1,\r\n\r\n    //限制穿墙函数，selfNode到了wallsNode的边缘会被限制在边缘\r\n    unThroughWalls: function(selfNode, wallsNode){\r\n\r\n        if((selfNode.x + selfNode.width/2) > wallsNode.width/2){//限右\r\n            selfNode.x = wallsNode.width/2 - selfNode.width/2;\r\n        } \r\n        if((selfNode.x - selfNode.width/2) < -wallsNode.width/2){//限左\r\n            selfNode.x = -(wallsNode.width/2 - selfNode.width/2);\r\n        }\r\n        if((selfNode.y + selfNode.height/2) > wallsNode.height/2){//限上\r\n            selfNode.y = wallsNode.height/2 - selfNode.height/2;\r\n        } \r\n        if((selfNode.y - selfNode.height/2) < -wallsNode.height/2){//限上\r\n            selfNode.y = -(wallsNode.height/2 - selfNode.height/2);\r\n        }\r\n    },\r\n\r\n    //穿墙函数，selfNode到了wallsNode的边缘会穿到对边\r\n    throughWalls: function(selfNode, wallsNode){\r\n\r\n        if((selfNode.x + selfNode.width/2) > wallsNode.width/2){//从右穿\r\n            selfNode.x = -(wallsNode.width/2 - selfNode.width/2);\r\n        } \r\n        if((selfNode.x - selfNode.width/2) < -wallsNode.width/2){//从左穿\r\n            selfNode.x = wallsNode.width/2 - selfNode.width/2;\r\n        }\r\n        if((selfNode.y + selfNode.height/2) > wallsNode.height/2){//从上穿\r\n            selfNode.y = -(wallsNode.height/2 - selfNode.height/2);\r\n        } \r\n        if((selfNode.y - selfNode.height/2) < -wallsNode.height/2){//从下穿\r\n            selfNode.y = wallsNode.height/2 - selfNode.height/2;\r\n        }\r\n    },\r\n\r\n    //限制currentHp范围在[0，maxHp]之间，返回currentHp的值\r\n    limitCurrentHp: function(currentHp, maxHp){\r\n        if(currentHp <= 0){\r\n            currentHp = 0;\r\n        }\r\n        if(currentHp >= maxHp){\r\n            currentHp = maxHp;\r\n        }\r\n        return currentHp;\r\n    },\r\n\r\n    //随机一个范围 min~max 的小数\r\n    random: function(min, max){\r\n        var ratio = cc.random0To1();\r\n        return min + (max - min) * ratio;\r\n    },\r\n\r\n    //弱化随机，随机0.4~0.8的小数\r\n    randomWeak: function(){\r\n        return this.random(0.4, 0.8);\r\n    },\r\n\r\n    //正常随机：随机一个范围 0.8~1.2 的小数\r\n    randomNormal: function(){\r\n        return this.random(0.8, 1.2);\r\n    },\r\n    \r\n    //增强随机，随机1.2~1.6的小数\r\n    randomStrengthen: function(){\r\n        return this.random(1.2, 1.6);\r\n    },\r\n\r\n    //随机一个范围 min~max 的整数\r\n    randomInt: function(min, max){\r\n        return Math.floor(Math.random() * (max - min + 1)) + min;\r\n    },\r\n\r\n    //随机怪物模型   最大随机图片范围，相对resources的文件路径，目标节点 \r\n    randomModel: function(maxRange, url, targetNode){\r\n        var num = this.randomInt(1, maxRange);\r\n        cc.loader.loadRes(url.toString() + '/' + num.toString(), cc.SpriteFrame, function (err, spriteFrame) {\r\n        targetNode.getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n        });\r\n    },\r\n\r\n\r\n    \r\n\r\n};\r\n\r\nmodule.exports = allData;\r\n\r\n"
  ]
}